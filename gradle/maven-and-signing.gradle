
apply plugin: 'signing'
apply plugin: 'maven'

class My {
    def aaa = 3
}

project.extensions.create('mavenConf', My)

def getRepoURL() {
    return hasProperty('sonatypeURL') ? sonatypeURL : 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
}

def getRepoUsername() {
    return hasProperty('sonatypeUsername') ? sonatypeUsername : ''
}

def getRepoPassword() {
    return hasProperty('sonatypePassword') ? sonatypePassword : ''
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}


task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}


artifacts {
    archives jar 

    archives javadocJar
    archives sourcesJar
}


// sign archives if signatory exists
if (signing.signatory) {

    signing {
        sign configurations.archives
    }

}


uploadArchives {
    repositories {
        mavenDeployer {

            // sign pom if signatory exists
            if (signing.signatory) {
                beforeDeployment {
                    signing.signPom(it)
                }
            }

            repository(url: getRepoURL()) {

                authentication userName: getRepoUsername(), password: getRepoPassword()
            }

            pom.project {

                name project['pom.name']
                description project['pom.description']
                url project['pom.url']

                scm {
                    url project['pom.scm.url']
                    connection project['pom.scm.connection']
                    developerConnection project['pom.scm.developer.connection']
                }

                licenses {
                    license {
                        name project['pom.license.name']
                        url project['pom.license.url']
                        distribution project['pom.license.distribution']
                    }
                }

                developers {
                    developer {
                        id project['pom.developer.id']
                        name project['pom.developer.name']
                    }
                }
            }
        }
    }
}
